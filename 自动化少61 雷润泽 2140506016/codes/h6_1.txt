%高斯噪声参数
noisemean=0;%噪声均值
noisevar=0.01;%噪声方差

%处理滤波器参数
%算术均值滤波器窗口尺寸
sizear=5;
%几何均值滤波器窗口尺寸
sizege=5;
%谐波均值滤波器窗口尺寸
sizeha=5;
%逆谐波均值滤波器窗口尺寸和Q
sizech=5;
qch=1;
%中值滤波器窗口尺寸
sizeme=5;
%最大值滤波器窗口尺寸
sizemax=5;
%最小值滤波器窗口尺寸
sizemin=5;
%中点滤波器窗口尺寸
sizemp=5;
%修正alpha均值滤波器窗口尺寸和d
sizeat=5;
dat=6;
%自适应局部滤波器窗口尺寸
sizeal=5;
%自适应中值滤波器最小和最大窗口尺寸
sizeam1=3;
sizeam2=7;
%巴特沃斯低通滤波器截止频率和阶次
d0=40;
orderlp=3;
%巴特沃斯带阻滤波器
d1=40;
d2=100;
orderbr=3;


%原始图像
imgi=im2double(imread('lena.bmp'));
h=size(imgi,1);
w=size(imgi,2);
%原始图像频谱
imgtemp=zeros(2*h,2*w);
for i=1:h
    for j=1:w
        imgtemp(i,j)=imgi(i,j)*power(-1,i+j);
    end
end
imgif=fft2(imgtemp);
%添加高斯噪声后的图像
imgn=imnoise(imgi,'gaussian',noisemean,noisevar);
imwrite(imgn,'lena_gaussian_noise.bmp');
%添加高斯噪声后的图像频谱
imgtemp=zeros(2*h,2*w);
for i=1:h
    for j=1:w
        imgtemp(i,j)=imgn(i,j)*power(-1,i+j);
    end
end
imgnf=fft2(imgtemp);
%噪声
noise=imgn-imgi;
%噪声频谱
imgtemp=zeros(2*h,2*w);
for i=1:h
    for j=1:w
        imgtemp(i,j)=noise(i,j)*power(-1,i+j);
    end
end
noisef=fft2(imgtemp);


%图像恢复
%算术均值滤波器
imgar=recover(imgn,'arithmetic',sizear);
imwrite(imgar,'lena_gaussian_arithmetic.bmp');
%几何均值滤波器
imgge=recover(imgn,'geometric',sizege);
imwrite(imgge,'lena_gaussian_geometric.bmp');
%谐波均值滤波器
imgha=recover(imgn,'harmonic',sizeha);
imwrite(imgha,'lena_gaussian_harmonic.bmp');
%逆谐波均值滤波器
imgch=recover(imgn,'contraharmonic',[sizech,qch]);
imwrite(imgch,'lena_gaussian_contraharmonic.bmp');
%中值滤波器
imgme=recover(imgn,'median',sizeme);
imwrite(imgme,'lena_gaussian_median.bmp');
%最大值滤波器
imgmax=recover(imgn,'max',sizemax);
imwrite(imgmax,'lena_gaussian_max.bmp');
%最小值滤波器
imgmin=recover(imgn,'min',sizemin);
imwrite(imgmin,'lena_gaussian_min.bmp');
%中点滤波器
imgmp=recover(imgn,'midpoint',sizemp);
imwrite(imgmp,'lena_gaussian_midpoint.bmp');
%修正alpha均值滤波器
imgat=recover(imgn,'alphatrimmed',[sizeat,dat]);
imwrite(imgat,'lena_gaussian_alphatrimmed.bmp');
%自适应局部滤波器
imgal=recover(imgn,'adaptivelocal',[sizeal,power(std2(noise),2)]);
imwrite(imgal,'lena_gaussian_adaptivelocal.bmp');
%自适应中值滤波器
imgam=recover(imgn,'adaptivemedian',[sizeam1,sizeam2]);
imwrite(imgam,'lena_gaussian_adaptivemedian.bmp');
%巴特沃斯低通滤波器
imglp=recover(imgn,'lowpass',[d0,orderlp]);
imwrite(imglp,'lena_gaussian_lowpass.bmp');
%巴特沃斯带阻滤波器
imgbr=recover(imgn,'bandreject',[d1,d2,orderbr]);
imwrite(imgbr,'lena_gaussian_bandreject.bmp');
%最佳陷波滤波器
imgno=recover(imgn,'notch',noise);
imwrite(imgno,'lena_gaussian_notch.bmp');

subplot(4,5,1);
imshow(imgi);
title('原始图像');
subplot(4,5,2);
imshow(abs(imgif)./max(abs(imgif),[],'all').*200);
title('原始图像频谱');
subplot(4,5,3);
imshow(imgn);
title('有噪声的图像');
subplot(4,5,4);
imshow(abs(imgnf)./max(abs(imgnf),[],'all').*200);
title('有噪声的图像频谱');
subplot(4,5,5);
imshow(noise.*0.5+0.5);
title('噪声');
subplot(4,5,6);
imshow(abs(noisef)./max(abs(noisef),[],'all').*10);
title('噪声频谱');
subplot(4,5,7);
imshow(imgar);
title('算术均值滤波');
subplot(4,5,8);
imshow(imgge);
title('几何均值滤波');
subplot(4,5,9);
imshow(imgha);
title('谐波均值滤波');
subplot(4,5,10);
imshow(imgch);
title('逆谐波均值滤波');
subplot(4,5,11);
imshow(imgme);
title('中值滤波');
subplot(4,5,12);
imshow(imgmax);
title('最大值滤波');
subplot(4,5,13);
imshow(imgmin);
title('最小值滤波');
subplot(4,5,14);
imshow(imgmp);
title('中点滤波');
subplot(4,5,15);
imshow(imgat);
title('修正alpha均值滤波');
subplot(4,5,16);
imshow(imgal);
title('自适应局部滤波');
subplot(4,5,17);
imshow(imgam);
title('自适应中值滤波');
subplot(4,5,18);
imshow(imglp);
title('巴特沃斯低通滤波');
subplot(4,5,19);
imshow(imgbr);
title('巴特沃斯带阻滤波');
subplot(4,5,20);
imshow(imgno);
title('最佳陷波滤波');
